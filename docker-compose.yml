version: '3.8'
services:
  gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    depends_on:
      - gateway-db
      - room-service
      - user-service
      - booking-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://gateway-db:5432/gatewaydb
      - SPRING_DATASOURCE_USERNAME=gatewayuser
      - SPRING_DATASOURCE_PASSWORD=gatewaypass

  room-service:
    build: ./room-service
    ports:
      - "8081:8080"
    depends_on:
      - room-db
      - kafka
      - rabbitmq
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://room-db:5432/roomdb
      - SPRING_DATASOURCE_USERNAME=roomuser
      - SPRING_DATASOURCE_PASSWORD=roompass
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_REDIS_HOST=redis

  user-service:
    build: ./user-service
    ports:
      - "8082:8080"
    depends_on:
      - user-db
      - kafka
      - rabbitmq
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=useruser
      - SPRING_DATASOURCE_PASSWORD=userpass
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_REDIS_HOST=redis

  booking-service:
    build: ./booking-service
    ports:
      - "8083:8080"
    depends_on:
      - booking-db
      - kafka
      - rabbitmq
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://booking-db:5432/bookingdb
      - SPRING_DATASOURCE_USERNAME=bookinguser
      - SPRING_DATASOURCE_PASSWORD=bookingpass
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_REDIS_HOST=redis

  room-db:
    image: postgres:15
    environment:
      POSTGRES_DB: roomdb
      POSTGRES_USER: roomuser
      POSTGRES_PASSWORD: roompass
    ports:
      - "5433:5432"
    volumes:
      - room-db-data:/var/lib/postgresql/data

  user-db:
    image: postgres:15
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: useruser
      POSTGRES_PASSWORD: userpass
    ports:
      - "5434:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data

  booking-db:
    image: postgres:15
    environment:
      POSTGRES_DB: bookingdb
      POSTGRES_USER: bookinguser
      POSTGRES_PASSWORD: bookingpass
    ports:
      - "5435:5432"
    volumes:
      - booking-db-data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.6.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:7.2-alpine
    container_name: booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - booking-network

  gateway-db:
    image: postgres:15
    environment:
      POSTGRES_DB: gatewaydb
      POSTGRES_USER: gatewayuser
      POSTGRES_PASSWORD: gatewaypass
    ports:
      - "5436:5432"
    volumes:
      - gateway-db-data:/var/lib/postgresql/data

volumes:
  room-db-data:
  user-db-data:
  booking-db-data:
  gateway-db-data:
  redis-data:
    name: booking-redis-data

networks:
  booking-network:
    name: booking-network 